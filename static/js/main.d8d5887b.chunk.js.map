{"version":3,"sources":["components/movie-item/movie-item.module.css","components/spinner/spinner.module.css","components/user-page/placeholder.png","components/search/search.module.css","components/user/user.module.css","components/header/header.module.css","components/not-found/404.png","reducers/reducer.ts","reducers/actions-types.ts","reducers/handlers.ts","constants.ts","reducers/actions.ts","reducers/selectors.ts","components/movie-item/movie-item.tsx","components/movies-list/movies-list.tsx","components/button/styled.ts","components/button/button.tsx","components/filters/styled.ts","components/filters/filter.tsx","components/search/styled.ts","components/select/styled.ts","components/select/select.tsx","components/search/search.tsx","components/user/styled.ts","components/user/user.tsx","components/header/styled.ts","components/theme-toggler/styled.ts","components/theme-toggler/theme-toggler.tsx","components/header/header.tsx","components/footer/styled.ts","components/footer/footer.tsx","components/spinner/spinner.tsx","components/user-page/styled.ts","components/user-page/user-page.tsx","styled.ts","components/movie-item-page/styled.ts","components/movie-item-page/movie-item-page.tsx","components/content/styled.ts","components/content/content.tsx","components/layout/layout.tsx","components/login/styled.ts","components/login/login.tsx","components/not-found/styled.ts","components/not-found/not-found.tsx","components/private-route/private-route.tsx","App.tsx","api/util.ts","reducers/utils.ts","api/api.ts","reducers/saga.ts","themes/theme.ts","index.tsx","components/theme/theme.tsx"],"names":["module","exports","intialState","movies","suggestions","search","selectedFilters","isAuth","Boolean","localStorage","getItem","theme","selectedFilter","user","login","password","actionHandler","Map","state","action","payload","Set","Array","from","keys","Object","assign","console","log","likes","filter","id","METHODS","getUser","type","addSuggestion","value","addingLike","removingLike","getMovies","selectedUser","createSelector","selectDesiredMovies","length","movie","every","genre","genres","includes","title","toLowerCase","selectFavoriteMovies","Number","getUnicGenre","map","flat","getMoviesTitle","isFavorite","selectedSuggestions","slice","MovieItem","props","poster_path","dispatch","useDispatch","useSelector","className","style","card","src","alt","img","footer","to","link","border","icon","faChevronRight","button","onClick","indexOf","changeFavorite","faHeart","MoviesList","allMovies","key","Button","styled","small","btnBgColor","btnTextColor","primary","ButtonElem","children","Label","label","textColor","Wrapper","div","Filters","unicGenres","useState","filters","setActive","handleChange","evt","item","target","name","isChecked","checked","set","htmlFor","onChange","filteredMap","WrapperSearch","bgColor","SelectElem","select","Select","Search","setValue","history","useHistory","setSuggestions","sugRes","moviesTitle","styles","searchWrapper","onSuggestionsClearRequested","onSuggestionsFetchRequested","getSuggestions","alwaysRenderSuggestions","getSuggestionValue","suggestion","renderSuggestion","onSuggestionSelected","_","suggestionValue","inputProps","placeholder","newValue","method","highlightFirstSuggestion","location","pathname","push","addSearch","UserName","span","User","avatar","container","HeaderWrapper","header","TopMenu","Input","input","ThemeToggler","defaultChecked","Header","logo","FooterWrapper","Footer","href","Spinner","containerBox","box","spinner","WrapperImg","Img","InputFile","LabelInputFile","Container","UserInfo","UserInfoHeader","UserBio","ButtonBlock","List","Title","h3","UserPage","bio","userName","setUserName","userBio","setUserBio","avatarImg","setAvatar","refImg","useRef","useEffect","onSubmit","event","preventDefault","data","FormData","formData","ref","files","reader","FileReader","onload","e","current","result","readAsDataURL","h1","ImgWrapper","ContentWrapper","ul","ListItem","li","Description","p","MovieItemPage","match","params","find","useCallback","width","height","join","director","revenue","release_date","overview","section","Content","BaseLayout","Modal","h2","WrappedContent","Text","WrappedFooter","Link","a","Login","setLogin","setPassword","logIn","NotFound","PrivateRouter","path","predicate","valueToBeChecked","SuccessRoute","FailureRoute","exact","createBrowserHistory","App","component","arg","toJSON","response","json","api","endPoint","authorization","_endPoint","_authorization","_login","this","_getStore","bind","status","Error","statusText","storage","store","getState","btoa","url","body","headers","Headers","Origin","Authorization","fetch","then","_checkStatus","catch","err","_load","fetchData","fetchUser","addLike","removeLike","postUserInfo","sendingUserInfo","Like","UnLike","appFetchSaga","signIn","postUserInfoSaga","rootSaga","call","put","setItem","warn","takeEvery","all","fork","light","dark","sagaMiddleware","createSagaMiddleware","createStore","reducer","has","get","compose","applyMiddleware","logger","composeWithDevTools","run","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.d8d5887b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"movie-item_card__3ArSB\",\"footer\":\"movie-item_footer__By4ps\",\"img\":\"movie-item_img__1heeb\",\"iconHeart\":\"movie-item_iconHeart__1OtW_\",\"iconHeartActive\":\"movie-item_iconHeartActive__2EJsR\",\"link\":\"movie-item_link__33ES-\",\"button\":\"movie-item_button__3dQot\",\"title\":\"movie-item_title__1Rcp7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"spinner_container__2xSA7\",\"containerBox\":\"spinner_containerBox__3MLVN\",\"box\":\"spinner_box__1xGN8\",\"spinner\":\"spinner_spinner__agPIl\",\"spinner1\":\"spinner_spinner1__3nSnf\"};","module.exports = __webpack_public_path__ + \"static/media/placeholder.97fd5c8f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchWrapper\":\"search_searchWrapper__V-eJ5\",\"search\":\"search_search__3Taum\",\"form\":\"search_form__1JqQd\",\"button\":\"search_button__309Gq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"user_avatar__3Kke2\",\"name\":\"user_name__dZoTl\",\"container\":\"user_container__2ueHl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__kQKOW\",\"wrapper\":\"header_wrapper__35sTb\",\"list\":\"header_list__1vyir\",\"logo\":\"header_logo__3GJF6\",\"search\":\"header_search__N9s2Z\"};","module.exports = __webpack_public_path__ + \"static/media/404.0c97f76e.png\";","import {\r\n    LOAD_MOVIES,\r\n    ADD_TO_SUGGESTIONS,\r\n    ADD_SEARCH,\r\n    ADD_TO_FILTER,\r\n    GET_USER,\r\n    LIKE_FILM,\r\n    UNLIKE_FILM,\r\n    LOG_IN,\r\n    LOG_IN_FAILED,\r\n    LOG_IN_SUCCES,\r\n    ADD_USER_INFO,\r\n    CHANGE_THEME,\r\n    CHANGE_SELECT,\r\n} from './actions-types';\r\nimport {\r\n    fetchMovies,\r\n    addingLike,\r\n    addSuggestion,\r\n    addSearchValues,\r\n    addToFilters,\r\n    getUser,\r\n    removeLike,\r\n    restoreState,\r\n    logIn,\r\n    logInFailed,\r\n    logInSucces,\r\n    addUserInfo,\r\n    changeTheme,\r\n    changeSelect,\r\n} from './handlers';\r\n\r\nconst intialState = {\r\n    movies: [],\r\n    suggestions: [],\r\n    search: '',\r\n    selectedFilters: [],\r\n    isAuth: Boolean(localStorage.getItem('isAuth')),\r\n    theme: 'dark',\r\n    selectedFilter: 'all',\r\n    user: {\r\n        login: 'IamAlexey95',\r\n        password: 'sf2YCHKifM',\r\n    },\r\n};\r\n\r\nconst actionHandler = new Map<string, any>([\r\n    [LOAD_MOVIES, fetchMovies],\r\n    [ADD_SEARCH, addSearchValues],\r\n    [ADD_TO_SUGGESTIONS, addSuggestion],\r\n    [ADD_TO_FILTER, addToFilters],\r\n    [GET_USER, getUser],\r\n    [LIKE_FILM, addingLike],\r\n    [UNLIKE_FILM, removeLike],\r\n    [LOG_IN_SUCCES, logInSucces],\r\n    [LOG_IN_FAILED, logInFailed],\r\n    [LOG_IN, logIn],\r\n    [ADD_USER_INFO, addUserInfo],\r\n    [CHANGE_THEME, changeTheme],\r\n    [CHANGE_SELECT, changeSelect],\r\n    ['DEFAULT', restoreState],\r\n]);\r\n\r\nexport function rootReducer(state = intialState, action: Action<any>) {\r\n    const reducer = actionHandler.has(action.type) ? actionHandler.get(action.type) : actionHandler.get('DEFAULT');\r\n    return reducer(state, action);\r\n}\r\n","export const LOAD_MOVIES = 'LOAD_MOVIES';\r\nexport const RESET_ALL = 'RESET_ALL';\r\nexport const ADD_TO_FAVORITE = 'ADD_TO_FAVORITE';\r\nexport const ADD_TO_SUGGESTIONS = 'ADD_TO_SUGGESTIONS';\r\nexport const FILTER_MOVIES = 'FILTER_MOVIES';\r\nexport const ADD_SEARCH = 'ADD_SEARCH';\r\nexport const ADD_TO_FILTER = 'ADD_TO_FILTER';\r\nexport const GET_USER = 'GET_USER';\r\nexport const LIKE_FILM = 'LIKE_FILM';\r\nexport const UNLIKE_FILM = 'UNLIKE_FILM';\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const LOG_IN_SUCCES = 'LOG_IN_SUCCES';\r\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\r\nexport const ADD_BIO = 'ADD_BIO';\r\nexport const ADD_NAME = 'ADD_NAME';\r\nexport const ADD_USER_INFO = 'ADD_USER_INFO';\r\nexport const CHANGE_THEME = 'CHANGE_THEME';\r\nexport const CHANGE_SELECT = 'CHANGE_SELECT';\r\n","export const fetchMovies = (state: RootStore, action: { payload: MovieItem[] }) => ({\r\n    ...state,\r\n    movies: action.payload,\r\n});\r\n\r\nexport const addToFilters = (state: RootStore, action: { payload: any }) => ({\r\n    ...state,\r\n    selectedFilters: Array.from(action.payload.keys()),\r\n});\r\n\r\nexport const getUser = (state: RootStore, action: { payload: any }) => {\r\n    return Object.assign({}, state, {\r\n        user: { ...state.user, ...action.payload },\r\n    });\r\n};\r\n\r\nexport const addSuggestion = (state: RootStore, action: { payload: string }) => ({\r\n    ...state,\r\n    suggestions: [...new Set([...state.suggestions, action.payload])],\r\n});\r\n\r\nexport const addSearchValues = (state: RootStore, action: { payload: string }) => ({\r\n    ...state,\r\n    search: action.payload,\r\n});\r\n\r\nexport const addingLike = (state: RootStore, action: { payload: number }) => {\r\n    console.log(action.payload);\r\n    return {\r\n        ...state,\r\n        user: { ...state.user, likes: [...state.user.likes, action.payload] },\r\n    };\r\n};\r\n\r\nexport const removeLike = (state: RootStore, action: { payload: number }) => ({\r\n    ...state,\r\n    user: { ...state.user, likes: state.user.likes.filter((id: number) => id !== action.payload) },\r\n});\r\n\r\nexport const logIn = (state: RootStore, action: { login: string; password: string }) => ({\r\n    ...state,\r\n    user: {\r\n        ...state.user,\r\n        login: action.login,\r\n        password: action.password,\r\n    },\r\n});\r\n\r\nexport const addUserInfo = (state: RootStore, action: { bio: string; name: string; avatar: string }) => {\r\n    return {\r\n        ...state,\r\n    };\r\n};\r\n\r\nexport const logInSucces = (state: RootStore, action: { payload: number }) => ({\r\n    ...state,\r\n    isAuth: true,\r\n});\r\n\r\nexport const logInFailed = (state: RootStore, action: { payload: number }) => ({\r\n    ...state,\r\n    isAuth: false,\r\n});\r\n\r\nexport const changeTheme = (state: RootStore, action: { payload: string }) => ({\r\n    ...state,\r\n    theme: action.payload,\r\n});\r\n\r\nexport const changeSelect = (state: RootStore, action: { payload: string }) => ({\r\n    ...state,\r\n    selectedFilter: action.payload,\r\n});\r\n\r\nexport const restoreState = (state: RootStore) => state;\r\n","export const BASE_URL = 'https://devlab.website/v1';\r\nexport const POSTER_PATH = 'https://devlab.website';\r\nexport const AUTHORIZATION = `SWFtQWxleGV5OTU6c2YyWUNIS2lmTQ==`;\r\n\r\nexport const METHODS = {\r\n    GET: `GET`,\r\n    POST: `POST`,\r\n    PUT: `PUT`,\r\n    DELETE: `DELETE`,\r\n};\r\n","import {\r\n    LOAD_MOVIES,\r\n    ADD_SEARCH,\r\n    RESET_ALL,\r\n    ADD_TO_FAVORITE,\r\n    ADD_TO_SUGGESTIONS,\r\n    FILTER_MOVIES,\r\n    ADD_TO_FILTER,\r\n    GET_USER,\r\n    LIKE_FILM,\r\n    UNLIKE_FILM,\r\n    LOG_IN_SUCCES,\r\n    LOG_IN_FAILED,\r\n    LOG_IN,\r\n    ADD_USER_INFO,\r\n    CHANGE_THEME,\r\n    CHANGE_SELECT,\r\n} from './actions-types';\r\n\r\nexport const addMovies = (newElements: MovieItem[]) => ({\r\n    type: LOAD_MOVIES,\r\n    payload: newElements,\r\n});\r\n\r\nexport const getUser = (user: any) => ({\r\n    type: GET_USER,\r\n    payload: user,\r\n});\r\n\r\nexport const addToFavorite = (id: number) => ({\r\n    type: ADD_TO_FAVORITE,\r\n    payload: id,\r\n});\r\n\r\nexport const addToFilter = (filter: any) => ({\r\n    type: ADD_TO_FILTER,\r\n    payload: filter,\r\n});\r\n\r\nexport const addSuggestion = (value: string) => ({\r\n    type: ADD_TO_SUGGESTIONS,\r\n    payload: value,\r\n});\r\n\r\nexport const addingLike = (id: string) => ({\r\n    type: LIKE_FILM,\r\n    payload: id,\r\n});\r\n\r\nexport const removingLike = (id: string) => ({\r\n    type: UNLIKE_FILM,\r\n    payload: id,\r\n});\r\n\r\nexport const logIn = (login: string, password: string) => ({\r\n    type: LOG_IN,\r\n    login,\r\n    password,\r\n});\r\n\r\nexport const addingUserInfo = (formData: any) => {\r\n    return {\r\n        type: ADD_USER_INFO,\r\n        formData,\r\n    };\r\n};\r\n\r\nexport const logInSucces = () => ({ type: LOG_IN_SUCCES });\r\n\r\nexport const logInFailed = () => ({ type: LOG_IN_FAILED });\r\n\r\nexport const addSearch = (value: string) => ({ type: ADD_SEARCH, payload: value });\r\n\r\nexport const filterMovies = (name: string) => ({\r\n    type: FILTER_MOVIES,\r\n    payload: name,\r\n});\r\n\r\nexport const changeTheme = (value: string) => ({\r\n    type: CHANGE_THEME,\r\n    payload: value,\r\n});\r\n\r\nexport const changeSelect = (value: string) => ({\r\n    type: CHANGE_SELECT,\r\n    payload: value.toLowerCase(),\r\n});\r\n\r\nexport const resetStore = () => ({ type: RESET_ALL });\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getMovies = (state: RootStore) => state.movies;\r\n\r\nconst getGenres = (state: RootStore) => state.movies.map(movie => movie.genres);\r\n\r\nconst getUser = (state: RootStore) => state.user;\r\n\r\nconst getSuggestions = (state: RootStore) => state.suggestions;\r\n\r\nconst getDesiredMovies = (state: RootStore) => {\r\n    const { search, selectedFilters } = state;\r\n\r\n    if (selectedFilters.length) {\r\n        return state.movies.filter(movie => selectedFilters.every((genre: string) => movie.genres.includes(genre)));\r\n    }\r\n\r\n    if (search === '') {\r\n        return state.movies;\r\n    }\r\n\r\n    if (search.length > 1) {\r\n        return state.movies.filter(movie =>\r\n            search === '' ? true : movie.title.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n    }\r\n\r\n    return state.movies;\r\n};\r\n\r\nexport const selectedUser = createSelector(getUser, user => user);\r\n\r\nexport const selectDesiredMovies = createSelector(getDesiredMovies, movies => movies);\r\n\r\nexport const selectFavoriteMovies = createSelector(getMovies, getUser, (movies, user) =>\r\n    movies.filter(movie => user.likes && user.likes.includes(Number(movie.id)))\r\n);\r\n\r\nexport const getUnicGenre = createSelector(getGenres, genres => new Set(genres.flat()));\r\n\r\nexport const getFavoritesMovies = createSelector(getMovies, movies => movies.filter(movie => movie.isFavorite));\r\n\r\nexport const getMoviesTitle = createSelector(getMovies, (movies: MovieItem[]) =>\r\n    movies.map((movie: MovieItem) => movie.title)\r\n);\r\n\r\nexport const selectedSuggestions = createSelector(getSuggestions, suggestions => suggestions.slice(0, 5));\r\n","import React from 'react';\r\nimport style from './movie-item.module.css';\r\nimport { POSTER_PATH } from '../../constants';\r\n\r\nimport { faHeart, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addingLike, removingLike } from '../../reducers/actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { selectedUser } from '../../reducers/selectors';\r\n\r\nexport const MovieItem = (props: MovieItem) => {\r\n    const { title, poster_path, id } = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const changeFavorite = (id: any) => {\r\n        user.likes.indexOf(id) >= 0 ? dispatch(removingLike(id)) : dispatch(addingLike(id));\r\n    };\r\n\r\n    const user = useSelector(selectedUser);\r\n\r\n    return (\r\n        <div className={style.card}>\r\n            <img src={`${POSTER_PATH}${poster_path}`} alt={title} className={style.img} />\r\n\r\n            <div className={style.footer}>\r\n                <Link to={`/movie/${id}`} className={style.link}>\r\n                    More Info\r\n                    <span>\r\n                        <FontAwesomeIcon border={false} icon={faChevronRight} />\r\n                    </span>\r\n                </Link>\r\n                {user.likes && (\r\n                    <button className={style.button} onClick={() => changeFavorite(id)}>\r\n                        <FontAwesomeIcon\r\n                            icon={faHeart}\r\n                            className={style[`${user.likes.indexOf(id) >= 0 ? 'iconHeartActive' : 'iconHeart'}`]}\r\n                        />\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { MovieItem } from '../movie-item/movie-item';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectDesiredMovies } from '../../reducers/selectors';\r\nimport './movies-list.css';\r\n\r\nexport const MoviesList = () => {\r\n    const allMovies = useSelector(selectDesiredMovies);\r\n\r\n    return (\r\n        <section className='wrapper'>\r\n            {allMovies && allMovies.map((movie: MovieItem) => <MovieItem {...movie} key={movie.id} />)}\r\n        </section>\r\n    );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n    font-family: 'PTSans', sans-serif;\r\n    font-size: ${(props: any) => (props.small ? '16px' : '24px')};\r\n    font-weight: bold;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: 1.33;\r\n    letter-spacing: normal;\r\n    text-align: left;\r\n    border: none;\r\n    background: ${props => props.theme.btnBgColor};\r\n    border-radius: 12px 0 12px 12px;\r\n    color: ${props => props.theme.btnTextColor};\r\n    padding: ${(props: any) => (props.small ? '5px 8px' : '9px 24px')};\r\n    border: solid 2px ${(props: any) => (props.primary ? '#0093ff' : '#d8d8d8')};\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        background: #50c9ff;\r\n        color: white;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { Button } from './styled';\r\n\r\ntype ButtonElementT = {\r\n    primary: boolean;\r\n};\r\n\r\nexport const ButtonElem = (props: any) => {\r\n    return <Button {...props}>{props.children}</Button>;\r\n};\r\n","import styled from 'styled-components';\r\n\r\ninterface WrapperI {\r\n    readonly filter: string;\r\n}\r\n\r\nexport const Label = styled.label`\r\n    margin-right: 16px;\r\n    font-size: 16px;\r\n    color: ${props => props.theme.textColor};\r\n    line-height: 24px;\r\n    input {\r\n        margin-right: 4px;\r\n    }\r\n`;\r\n\r\nexport const Wrapper = styled.div<WrapperI>`\r\n    flex-wrap: wrap;\r\n    margin-top: 24px;\r\n    display: ${props => (props.filter === 'advanced' ? 'flex' : 'none')};\r\n    button {\r\n        margin-left: auto;\r\n        margin-top: 16px;\r\n    }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addToFilter } from '../../reducers/actions';\r\nimport { getUnicGenre } from '../../reducers/selectors';\r\nimport { ButtonElem } from '../button/button';\r\nimport { Label, Wrapper } from './styled';\r\n\r\nexport const Filters = () => {\r\n    const movies = useSelector((state: RootStore) => state);\r\n    const selectedFilter = useSelector((state: RootStore) => state.selectedFilter);\r\n    const unicGenres = Array.from(getUnicGenre(movies));\r\n\r\n    const [filters, setActive] = useState<any>(new Map());\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n        const item = evt.target.name;\r\n        const isChecked = evt.target.checked;\r\n        setActive(filters.set(item, isChecked));\r\n    };\r\n\r\n    console.log(selectedFilter);\r\n\r\n    return (\r\n        <Wrapper filter={selectedFilter}>\r\n            {unicGenres.map(genre => {\r\n                return (\r\n                    <Label htmlFor={genre} key={genre}>\r\n                        <input type='checkbox' id={genre} name={genre} onChange={handleChange} />\r\n                        {genre}\r\n                    </Label>\r\n                );\r\n            })}\r\n\r\n            <ButtonElem\r\n                small\r\n                primary\r\n                onClick={() => {\r\n                    const filteredMap = new Map([...filters].filter(([_, value]) => value));\r\n                    dispatch(addToFilter(filteredMap));\r\n                }}\r\n            >\r\n                Apply\r\n            </ButtonElem>\r\n        </Wrapper>\r\n    );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const WrapperSearch = styled.div`\r\n    width: 100%;\r\n\r\n    .react-autosuggest__container {\r\n        position: relative;\r\n        width: 100%;\r\n        display: flex;\r\n    }\r\n\r\n    .react-autosuggest__input {\r\n        width: 100%;\r\n        padding: 16px 20px;\r\n        font-family: Helvetica, sans-serif;\r\n        font-weight: 300;\r\n        font-size: 16px;\r\n        border: 1px solid inherit;\r\n        border-radius: 4px;\r\n        background: ${props => props.theme.bgColor};\r\n        color: ${props => props.theme.textColor};\r\n    }\r\n\r\n    .react-autosuggest__input--focused {\r\n        outline: none;\r\n    }\r\n\r\n    .react-autosuggest__input--open {\r\n        border-bottom-left-radius: 0;\r\n        border-bottom-right-radius: 0;\r\n    }\r\n\r\n    .react-autosuggest__suggestions-container {\r\n        display: none;\r\n    }\r\n\r\n    .react-autosuggest__suggestions-container--open {\r\n        display: block;\r\n        position: absolute;\r\n        top: 51px;\r\n        width: 100%;\r\n        border: 1px solid #aaa;\r\n        background-color: inherit;\r\n        font-family: Helvetica, sans-serif;\r\n        font-weight: 300;\r\n        font-size: 16px;\r\n        border-bottom-left-radius: 4px;\r\n        border-bottom-right-radius: 4px;\r\n        z-index: 2;\r\n    }\r\n\r\n    .react-autosuggest__suggestions-list {\r\n        margin: 0;\r\n        padding: 0;\r\n        list-style-type: none;\r\n        background: white;\r\n    }\r\n\r\n    .react-autosuggest__suggestion {\r\n        cursor: pointer;\r\n        padding: 10px 20px;\r\n    }\r\n\r\n    .react-autosuggest__suggestion--highlighted {\r\n        background-color: #ddd;\r\n    }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const SelectElem = styled.select`\r\n    background: ${props => props.theme.bgColor};\r\n    color: ${props => props.theme.textColor};\r\n    padding: 0 8px;\r\n`;\r\n","import React from 'react';\r\nimport { SelectElem } from './styled';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeSelect } from '../../reducers/actions';\r\n\r\nexport const Select = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChangeSelect = (evt: any) => {\r\n        dispatch(changeSelect(evt.target.value));\r\n    };\r\n\r\n    return (\r\n        <SelectElem onChange={handleChangeSelect}>\r\n            <option value='all'>All</option>\r\n            <option value='director'>Director</option>\r\n            <option value='advanced'>Advanced</option>\r\n        </SelectElem>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport styles from './search.module.css';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport { ButtonElem } from '../button/button';\r\n\r\n// import './theme.css';\r\n\r\nimport { getMoviesTitle, selectedSuggestions } from '../../reducers/selectors';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addSuggestion, addSearch } from '../../reducers/actions';\r\nimport { Filters } from '../filters/filter';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { WrapperSearch } from './styled';\r\nimport { Select } from '../select/select';\r\n\r\nexport const Search = () => {\r\n    const [value, setValue] = useState('');\r\n    const history = useHistory();\r\n\r\n    const [suggestions, setSuggestions] = useState<string[]>([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const movies = useSelector((state: RootStore) => state);\r\n    const sugRes = useSelector(selectedSuggestions);\r\n\r\n    const moviesTitle = getMoviesTitle(movies);\r\n\r\n    const getSuggestions = (value: string) =>\r\n        value.length >= 1 ? moviesTitle.filter(title => title.toLowerCase().includes(value.toLowerCase())) : sugRes;\r\n\r\n    return (\r\n        <div className={styles.searchWrapper}>\r\n            <div className={styles.search}>\r\n                <Select />\r\n                <WrapperSearch>\r\n                    <Autosuggest\r\n                        suggestions={suggestions}\r\n                        onSuggestionsClearRequested={() => setSuggestions([])}\r\n                        onSuggestionsFetchRequested={({ value }) => {\r\n                            setValue(value);\r\n                            setSuggestions(getSuggestions(value));\r\n                        }}\r\n                        alwaysRenderSuggestions={suggestions ? true : false}\r\n                        getSuggestionValue={suggestion => suggestion}\r\n                        renderSuggestion={suggestion => <span>{suggestion}</span>}\r\n                        onSuggestionSelected={(_, { suggestionValue }) => {\r\n                            dispatch(addSuggestion(suggestionValue));\r\n                        }}\r\n                        inputProps={{\r\n                            placeholder: 'Search Movier+',\r\n                            value,\r\n                            onChange: (_, { newValue, method }) => {\r\n                                setValue(newValue);\r\n                            },\r\n                        }}\r\n                        highlightFirstSuggestion={true}\r\n                    />\r\n                </WrapperSearch>\r\n                <ButtonElem\r\n                    className={styles.button}\r\n                    primary\r\n                    onClick={() => {\r\n                        if (history.location.pathname !== '/') history.push('/');\r\n                        dispatch(addSearch(value));\r\n                        dispatch(addSuggestion(value));\r\n                    }}\r\n                >\r\n                    Search\r\n                </ButtonElem>\r\n            </div>\r\n            <Filters />\r\n        </div>\r\n    );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const UserName = styled.span`\r\n    font-size: 16px;\r\n    color: ${props => props.theme.textColor};\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './user.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport placeholder from '../user-page/placeholder.png';\r\nimport { selectedUser } from '../../reducers/selectors';\r\nimport { UserName } from './styled';\r\n\r\nexport const User = () => {\r\n    const user = useSelector(selectedUser);\r\n    const { avatar } = user;\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <img\r\n                src={avatar ? `https://devlab.website/${avatar}` : placeholder}\r\n                alt='avatar'\r\n                className={styles.avatar}\r\n            />\r\n            <Link to='/user'>\r\n                <UserName>{user && user.login}</UserName>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderWrapper = styled.header`\r\n    padding-top: 32px;\r\n    padding-bottom: 16px;\r\n    box-shadow: 0 3px 6px 0 rgba(0, 7, 93, 0.16);\r\n    background-color: ${props => props.theme.bgColor};\r\n`;\r\n\r\nexport const TopMenu = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 1200px;\r\n    display: flex;\r\n    margin: 0 auto;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n    height: 0;\r\n    width: 0;\r\n    visibility: hidden;\r\n\r\n    &:checked + label span {\r\n        left: calc(100% - 2px);\r\n\r\n        transform: translateX(-100%);\r\n    }\r\n`;\r\nexport const Label = styled.label`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    cursor: pointer;\r\n    width: 50px;\r\n    height: 28px;\r\n    background: grey;\r\n    border-radius: 100px;\r\n    position: relative;\r\n    transition: background-color 0.2s;\r\n\r\n    span {\r\n        content: '&#x1F31A;';\r\n        position: absolute;\r\n        top: 2px;\r\n        left: 2px;\r\n        width: 25px;\r\n        height: 25px;\r\n        border-radius: 45px;\r\n        transition: 0.2s;\r\n        background: ${props => props.theme.bgColor};\r\n        filter: invert(100%);\r\n        box-shadow: 0 0 2px 0 rgba(10, 10, 10, 0.29);\r\n    }\r\n\r\n    &:active {\r\n        span {\r\n            width: 60px;\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeTheme } from '../../reducers/actions';\r\nimport { Label, Input } from './styled';\r\n\r\nexport const ThemeToggler = () => {\r\n    const currentTheme = 'light';\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeTheme = ({ target }: any) => {\r\n        dispatch(changeTheme(target.checked ? 'dark' : 'light'));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Input\r\n                id={`react-switch-new`}\r\n                type='checkbox'\r\n                onChange={onChangeTheme}\r\n                defaultChecked={currentTheme === 'light' ? true : false}\r\n            />\r\n            <Label htmlFor={`react-switch-new`}>\r\n                <span className={`react-switch-button`} />\r\n            </Label>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport styles from './header.module.css';\r\nimport { Search } from '../search/search';\r\nimport { User } from '../user/user';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { HeaderWrapper, TopMenu, Wrapper } from './styled';\r\nimport { ThemeToggler } from '../theme-toggler/theme-toggler';\r\n\r\nexport const Header = () => {\r\n    const isAuth = useSelector((state: RootStore) => state.isAuth);\r\n\r\n    return (\r\n        <HeaderWrapper>\r\n            <TopMenu>\r\n                <ThemeToggler />\r\n            </TopMenu>\r\n            <Wrapper>\r\n                <Link to='/' className={styles.logo}>\r\n                    MOViER+\r\n                </Link>\r\n                <Search />\r\n                {isAuth ? <User /> : <Link to='/login'>Log in</Link>}\r\n            </Wrapper>\r\n        </HeaderWrapper>\r\n    );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const FooterWrapper = styled.footer`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 25px 0 40px 0;\r\n    color: ${props => props.theme.textColor};\r\n\r\n    a {\r\n        color: ${props => props.theme.textColor};\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { FooterWrapper } from './styled';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <FooterWrapper>\r\n            <a href='/'>Privacy Policy</a>\r\n            <p>© 2010-2020 by Movier-plus.com, Inc.</p>\r\n        </FooterWrapper>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport style from './spinner.module.css';\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.containerBox}>\r\n                <div className={style.box}>\r\n                    <div className={style.spinner}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const WrapperImg = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 16px;\r\n`;\r\nexport const Img = styled.img`\r\n    width: 272px;\r\n    height: 272px;\r\n`;\r\n\r\nexport const InputFile = styled.input`\r\n    font-size: 0;\r\n    width: 0;\r\n    height: 0;\r\n    display: none;\r\n`;\r\nexport const LabelInputFile = styled.label`\r\n    font-size: 16px;\r\n    display: flex;\r\n    border-radius: 0 0 16px 16px;\r\n    background-color: #0093ff;\r\n    color: white;\r\n    padding: 8px 18px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    form {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n    margin-left: 16px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 50%;\r\n\r\n    div {\r\n        color: #adadad;\r\n    }\r\n    span {\r\n        width: 72px;\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        margin-right: 24px;\r\n        color: ${props => props.theme.textColor};\r\n    }\r\n`;\r\n\r\nexport const UserInfoHeader = styled.div`\r\n    margin-bottom: 28px;\r\n    padding-bottom: 28px;\r\n    border-bottom: 1px dashed #adadad;\r\n`;\r\n\r\nexport const UserName = styled.div`\r\n    margin-bottom: 28px;\r\n    input {\r\n        padding: 10px 7px;\r\n        color: #000;\r\n        border-radius: 8px;\r\n        border: solid 1px #dedede;\r\n        background: ${props => props.theme.bgColor};\r\n        color: ${props => props.theme.textColor};\r\n    }\r\n`;\r\nexport const UserBio = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    textarea {\r\n        padding: 10px 7px;\r\n        color: #000;\r\n        resize: none;\r\n        flex-grow: 1;\r\n        border-radius: 8px;\r\n        border: solid 1px #dedede;\r\n        background: ${props => props.theme.bgColor};\r\n        color: ${props => props.theme.textColor};\r\n    }\r\n`;\r\n\r\nexport const ButtonBlock = styled.div`\r\n    display: flex;\r\n    margin-left: auto;\r\n    margin-top: 24px;\r\n\r\n    button ~ button {\r\n        margin-left: 20px;\r\n    }\r\n`;\r\n\r\nexport const List = styled.div`\r\n    display: grid;\r\n    max-width: 1200px;\r\n    grid-gap: 16px;\r\n    grid-template-columns: repeat(auto-fill, minmax(165px, 1fr));\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n    width: 100%;\r\n    margin-top: 24px;\r\n    color: ${props => props.theme.textColor};\r\n`;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Spinner } from '../spinner/spinner';\r\nimport { addingUserInfo } from '../../reducers/actions';\r\nimport { selectFavoriteMovies, selectedUser } from '../../reducers/selectors';\r\nimport {\r\n    WrapperImg,\r\n    Img,\r\n    ButtonBlock,\r\n    UserBio,\r\n    Container,\r\n    UserInfo,\r\n    UserName,\r\n    UserInfoHeader,\r\n    List,\r\n    Title,\r\n    InputFile,\r\n    LabelInputFile,\r\n} from './styled';\r\nimport placeholder from './placeholder.png';\r\nimport { MovieItem } from '../movie-item/movie-item';\r\n\r\nexport const UserPage = () => {\r\n    const user = useSelector(selectedUser);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { bio, name, avatar } = user;\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [userBio, setUserBio] = useState('');\r\n\r\n    const [avatarImg, setAvatar] = useState(``);\r\n\r\n    const refImg = useRef<any>();\r\n\r\n    useEffect(() => {\r\n        setUserName(name);\r\n        setUserBio(bio);\r\n        setAvatar(avatar);\r\n    }, [bio, name, avatar]);\r\n\r\n    const movies = useSelector(selectFavoriteMovies);\r\n\r\n    const handleSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        dispatch(addingUserInfo(data));\r\n    };\r\n\r\n    const handleChangeAvatar = (event: any) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            let reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const img = refImg.current;\r\n                img.src = e.target.result;\r\n            };\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return user ? (\r\n        <section>\r\n            <div className='container'>\r\n                <h1>My Profile</h1>\r\n                <Container>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <WrapperImg>\r\n                            <Img src={avatarImg ? `https://devlab.website/${avatarImg}` : placeholder} ref={refImg} />\r\n                            <LabelInputFile htmlFor='file'>\r\n                                Choose File\r\n                                <InputFile onChange={handleChangeAvatar} type='file' id='file' name='avatar' />\r\n                            </LabelInputFile>\r\n                        </WrapperImg>\r\n                        <UserInfo>\r\n                            <UserInfoHeader>\r\n                                <span>userName:</span> <span>{user.login}</span>\r\n                            </UserInfoHeader>\r\n                            <UserName>\r\n                                <span>Name: </span>\r\n                                <input\r\n                                    value={userName || ''}\r\n                                    type='text'\r\n                                    name='name'\r\n                                    onChange={(evt: React.ChangeEvent<HTMLInputElement>) =>\r\n                                        setUserName(evt.target.value)\r\n                                    }\r\n                                />\r\n                            </UserName>\r\n                            <UserBio>\r\n                                <span> Bio:</span>\r\n                                <textarea\r\n                                    name='bio'\r\n                                    value={userBio || ''}\r\n                                    onChange={(evt: React.ChangeEvent<HTMLTextAreaElement>) =>\r\n                                        setUserBio(evt.target.value)\r\n                                    }\r\n                                />\r\n                            </UserBio>\r\n                            <ButtonBlock>\r\n                                <button onClick={e => e.preventDefault()}>cancel</button>\r\n                                <button type='submit'>save</button>\r\n                            </ButtonBlock>\r\n                        </UserInfo>\r\n                    </form>\r\n                    <Title>Your favorites. You added {movies.length} movies</Title>\r\n                    <List>{movies && movies.map((movie: MovieItem) => <MovieItem {...movie} key={movie.id} />)}</List>\r\n                </Container>\r\n            </div>\r\n        </section>\r\n    ) : (\r\n        <Spinner />\r\n    );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    min-height: 100vh;\r\n    flex-direction: column;\r\n    background-color: ${props => props.theme.bgColor};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n    font-family: 'PT Sans', sans-serif;\r\n    font-size: 76px;\r\n    font-weight: normal;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: 1.29;\r\n    margin-top: 0;\r\n    color: ${props => props.theme.textColor};\r\n`;\r\n\r\nexport const ImgWrapper = styled.div`\r\n    float: left;\r\n    width: 45%;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n    float: right;\r\n    width: 50%;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n    max-width: 100%;\r\n    height: auto;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding-left: 0;\r\n\r\n    li:last-child {\r\n        position: static;\r\n    }\r\n`;\r\nexport const ListItem = styled.li`\r\n    margin-right: 12px;\r\n    position: relative;\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: 1.25;\r\n    color: ${props => props.theme.textColor};\r\n\r\n    &::before {\r\n        right: -8px;\r\n        color: grey;\r\n        top: 0;\r\n        position: absolute;\r\n        color: ${props => props.theme.textColor};\r\n        content: '|';\r\n    }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n    font-size: 16px;\r\n    color: ${props => props.theme.textColor};\r\n`;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectDesiredMovies } from '../../reducers/selectors';\r\n\r\nimport { Spinner } from '../spinner/spinner';\r\nimport { POSTER_PATH } from '../../constants';\r\nimport { selectedUser } from '../../reducers/selectors';\r\nimport { addingLike, removingLike } from '../../reducers/actions';\r\nimport { List, Title, Img, ListItem, ImgWrapper, ContentWrapper, Description } from './styled';\r\nimport { ButtonElem } from '../button/button';\r\n\r\nexport const MovieItemPage = (props: any) => {\r\n    const { id } = props.match.params;\r\n    const allMovies = useSelector(selectDesiredMovies);\r\n    const movie = allMovies.find(movie => movie.id === Number(id)) as MovieItem;\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(selectedUser);\r\n\r\n    const changeFavorite = useCallback(\r\n        (movie: any) => {\r\n            user.likes.indexOf(movie.id) >= 0 ? dispatch(removingLike(movie.id)) : dispatch(addingLike(movie.id));\r\n        },\r\n        [user.likes]\r\n    );\r\n\r\n    return movie ? (\r\n        <div className='clearfix'>\r\n            <ImgWrapper>\r\n                <Img src={`${POSTER_PATH}${movie.poster_path}`} alt='' width='526' height='789'></Img>\r\n            </ImgWrapper>\r\n            <ContentWrapper>\r\n                <Title>{movie.title}</Title>\r\n                <div>\r\n                    {user.likes ? (\r\n                        <ButtonElem onClick={() => changeFavorite(movie)}>\r\n                            {user.likes && user.likes.indexOf(movie.id) >= 0\r\n                                ? `Remove from favorites`\r\n                                : `Add to Favorites`}\r\n                        </ButtonElem>\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                </div>\r\n                <div>\r\n                    <List>\r\n                        <ListItem>{movie.genres.join(', ')}</ListItem>\r\n                        <ListItem>Director: {movie.director}</ListItem>\r\n                        <ListItem>Revenue: ${movie.revenue}</ListItem>\r\n                        <ListItem>Release date: {movie.release_date}</ListItem>\r\n                    </List>\r\n                </div>\r\n                <div>\r\n                    <Description>{movie.overview}</Description>\r\n                </div>\r\n            </ContentWrapper>\r\n        </div>\r\n    ) : (\r\n        <Spinner />\r\n    );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ContentWrapper = styled.section`\r\n    max-width: 1200px;\r\n    margin: 32px auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n    background: ${props => props.theme.bgColor};\r\n`;\r\n","import React from 'react';\r\nimport { ContentWrapper } from './styled';\r\n// import styles from './content.module.css';\r\n\r\nexport const Content = (props: any) => {\r\n    return <ContentWrapper>{props.children}</ContentWrapper>;\r\n};\r\n","import React from 'react';\r\nimport { Content } from '../content/content';\r\n\r\nexport const BaseLayout = ({ children }: any) => <Content>{children}</Content>;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    display: flex;\r\n\r\n    &::before {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        left: 0;\r\n        top: 0;\r\n        content: '';\r\n        display: block;\r\n\r\n        backdrop-filter: blur(2.5px);\r\n        opacity: 0.7;\r\n        background-color: #009dff;\r\n    }\r\n`;\r\n\r\nexport const Modal = styled.div`\r\n    display: flex;\r\n    z-index: 5;\r\n    background: white;\r\n    width: 752px;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n    margin: auto;\r\n    box-shadow: 0 0 36px 0 rgba(0, 7, 93, 0.16);\r\n    border-radius: 12px 0 12px 12px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-family: 'PTSans', sans-serif;\r\n    font-size: 36px;\r\n    width: 100%;\r\n    font-weight: bold;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: 1.28;\r\n    letter-spacing: normal;\r\n    text-align: center;\r\n    color: #0093ff;\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nexport const WrappedContent = styled.div`\r\n    padding: 32px 96px;\r\n    display: flex;\r\n    width: 100%;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n    font-family: 'PTSans', sans-serif;\r\n    font-size: 16px;\r\n    line-height: 1.25;\r\n    text-align: center;\r\n    margin-top: 0;\r\n    margin-bottom: 28px;\r\n    color: #646464;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    width: 100%;\r\n    padding: 12px 20px;\r\n    border-radius: 12px 0 12px 12px;\r\n    font-size: 20px;\r\n    border: solid 1px #dedede;\r\n\r\n    & ~ input {\r\n        margin-top: 24px;\r\n    }\r\n`;\r\n\r\nexport const WrappedFooter = styled.div`\r\n    background-color: #0093ff;\r\n    padding: 16px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n    font-size: 20px;\r\n    color: white;\r\n    text-decoration: underline;\r\n    transition: 0.3;\r\n    &:hover {\r\n        text-decoration: none;\r\n    }\r\n`;\r\nexport const Button = styled.button`\r\n    font-family: 'PTSans', sans-serif;\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: 1.33;\r\n    letter-spacing: normal;\r\n    text-align: left;\r\n    border: none;\r\n    background: white;\r\n    border-radius: 12px 0 12px 12px;\r\n    color: #0093ff;\r\n    padding: 9px 24px;\r\n    cursor: pointer;\r\n    margin-left: 24px;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        background: #50c9ff;\r\n        color: white;\r\n    }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Modal, Title, WrappedContent, Text, Input, WrappedFooter, Link, Button } from './styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logIn } from '../../reducers/actions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const Login = (props: any) => {\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let history = useHistory();\r\n\r\n    const isAuth = useSelector((state: RootStore) => state.isAuth);\r\n\r\n    useEffect(() => {\r\n        isAuth && history.push('/user');\r\n    }, [isAuth]);\r\n\r\n    return (\r\n        <Container>\r\n            <Modal>\r\n                <WrappedContent>\r\n                    <Title>Welcome Back</Title>\r\n                    <Text>It' been too long! Enter your username and password and comeback to us!</Text>\r\n                    <Input\r\n                        type='text'\r\n                        value={login}\r\n                        placeholder='UserName'\r\n                        onChange={(evt: React.ChangeEvent<HTMLInputElement>) => setLogin(evt.target.value)}\r\n                    />\r\n                    <p>IamAlexey95</p>\r\n                    <Input\r\n                        type='password'\r\n                        value={password}\r\n                        placeholder='Password'\r\n                        onChange={(evt: React.ChangeEvent<HTMLInputElement>) => setPassword(evt.target.value)}\r\n                    />\r\n                    <p>sf2YCHKifM</p>\r\n                </WrappedContent>\r\n                <WrappedFooter>\r\n                    <Link href={`#`}>Oops, I forget my password!</Link>\r\n                    <div>\r\n                        <Link href={`#`} onClick={() => history.push(`/`)}>\r\n                            Cancel\r\n                        </Link>\r\n                        <Button\r\n                            onClick={() => {\r\n                                dispatch(logIn(login, password));\r\n                            }}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                    </div>\r\n                </WrappedFooter>\r\n            </Modal>\r\n        </Container>\r\n    );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.p`\r\n    font-family: 'PT Sans', sans-serif;\r\n    font-size: 160px;\r\n    font-weight: normal;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    text-align: center;\r\n    line-height: 1.29;\r\n    margin-top: 0;\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    color: white;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n","import React from 'react';\r\nimport { Title, Img, Wrapper } from './styled';\r\nimport logo from './404.png';\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <Wrapper>\r\n            <Title>404</Title>\r\n            <Img src={logo} alt='' />\r\n        </Wrapper>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Route } from 'react-router-dom';\r\n\r\nexport const PrivateRouter = ({\r\n    path,\r\n    predicate,\r\n    valueToBeChecked,\r\n    SuccessRoute,\r\n    FailureRoute,\r\n}: PrivateRoutePropsT) => {\r\n    return (\r\n        <Route exact path={path}>\r\n            {predicate(valueToBeChecked) ? <SuccessRoute /> : <FailureRoute />}\r\n        </Route>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport 'normalize.css';\r\nimport { MoviesList } from './components/movies-list/movies-list';\r\nimport { Header } from './components/header/header';\r\nimport { Footer } from './components/footer/footer';\r\nimport { UserPage } from './components/user-page/user-page';\r\n\r\nimport { Router, Switch, Route } from 'react-router-dom';\r\nimport './index.css';\r\nimport { Wrapper } from './styled';\r\nimport { MovieItemPage } from './components/movie-item-page/movie-item-page';\r\nimport { BaseLayout } from './components/layout/layout';\r\nimport { Login } from './components/login/login';\r\nimport { NotFound } from './components/not-found/not-found';\r\nimport { PrivateRouter } from './components/private-route/private-route';\r\nimport { useSelector } from 'react-redux';\r\nimport { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\n\r\nconst App: React.FC = () => {\r\n    const isAuth = useSelector((state: RootStore) => state.isAuth);\r\n    return (\r\n        <Router history={history}>\r\n            <Wrapper>\r\n                <Header />\r\n                <BaseLayout>\r\n                    <Switch>\r\n                        <Route exact path='/' component={MoviesList} />\r\n                        <Route exact path='/movie/:id' component={MovieItemPage} />\r\n                        <Route path='/login' component={Login} />\r\n                        <PrivateRouter\r\n                            path='/user'\r\n                            predicate={arg => arg}\r\n                            valueToBeChecked={isAuth}\r\n                            SuccessRoute={() => <UserPage />}\r\n                            FailureRoute={() => <NotFound />}\r\n                        />\r\n                        <Route path='*' component={NotFound}></Route>\r\n                    </Switch>\r\n                </BaseLayout>\r\n                <Footer />\r\n            </Wrapper>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","export const toJSON = (response: any) => {\r\n    return response.json();\r\n};\r\n","import { ApiService } from '../api/api';\r\nimport { BASE_URL } from '../constants';\r\n\r\nconst api = new ApiService({\r\n    endPoint: BASE_URL,\r\n});\r\n\r\nexport const fetchData = () => api.getMovies();\r\n\r\nexport const fetchUser = () => api.getUser();\r\n\r\nexport const addLike = (id: number) => api.addLike(id);\r\n\r\nexport const removeLike = (id: number) => api.removeLike(id);\r\n\r\nexport const postUserInfo = (FormData: any) => api.sendingUserInfo(FormData);\r\n","import { METHODS } from './../constants';\r\nimport { toJSON } from './util';\r\nimport { store } from '../index';\r\n\r\ntype ApiT = {\r\n    endPoint: string;\r\n    authorization?: any;\r\n};\r\n\r\ntype LoadT = {\r\n    url: string;\r\n    method?: any;\r\n    body?: null | any;\r\n    headers?: Headers;\r\n};\r\n\r\nexport class ApiService {\r\n    private _endPoint: string;\r\n    private _authorization: string;\r\n    private _login: null | string;\r\n\r\n    constructor({ endPoint, authorization = null }: ApiT) {\r\n        this._endPoint = endPoint;\r\n        this._authorization = authorization;\r\n        this._getStore = this._getStore.bind(this);\r\n        this._login = null;\r\n\r\n        Object.assign(this, { endPoint, authorization });\r\n    }\r\n\r\n    _checkStatus(response: any) {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response;\r\n        } else {\r\n            throw new Error(`${response.status}: ${response.statusText}`);\r\n        }\r\n    }\r\n    _getStore() {\r\n        const storage = store.getState().user;\r\n        const { login, password } = storage;\r\n        this._login = login;\r\n        return btoa(`${login}:${password}`);\r\n    }\r\n\r\n    _load({\r\n        url,\r\n        method = null,\r\n        body = null,\r\n        headers = new Headers({\r\n            Origin: 'http://localhost:3000/',\r\n            Authorization: `Basic ${this._authorization || this._getStore()}`,\r\n        }),\r\n    }: LoadT) {\r\n        return fetch(`${this._endPoint}/${url}`, { method, body, headers })\r\n            .then(this._checkStatus)\r\n            .then(toJSON)\r\n            .catch(err => {\r\n                throw err;\r\n            });\r\n    }\r\n\r\n    removeLike(id: number) {\r\n        return this._load({\r\n            url: `movie/${id}/like`,\r\n            method: METHODS.DELETE,\r\n        });\r\n    }\r\n\r\n    sendingUserInfo(formData: any) {\r\n        return this._load({ url: `user/${this._login}`, method: METHODS.PUT, body: formData });\r\n    }\r\n\r\n    getMovies() {\r\n        return this._load({ url: `movies`, method: METHODS.GET });\r\n    }\r\n\r\n    addLike(id: number) {\r\n        return this._load({ url: `movie/${id}/like`, method: METHODS.POST });\r\n    }\r\n\r\n    getUser() {\r\n        return this._load({ url: `user/${this._login}`, method: METHODS.GET });\r\n    }\r\n}\r\n","import { LIKE_FILM, UNLIKE_FILM, LOG_IN, ADD_USER_INFO } from './actions-types';\r\nimport { addMovies, getUser, logInSucces, logInFailed } from './actions';\r\nimport { all, fork, put, call, takeEvery } from 'redux-saga/effects';\r\nimport { fetchData, fetchUser, addLike, removeLike, postUserInfo } from './utils';\r\n\r\nfunction* Like(action: any) {\r\n    yield call(addLike, action.payload);\r\n}\r\n\r\nfunction* UnLike(action: any) {\r\n    yield call(removeLike, action.payload);\r\n}\r\n\r\nfunction* appFetchSaga() {\r\n    const data = yield call(fetchData);\r\n    yield put(addMovies(data));\r\n    if (localStorage.getItem('isAuth')) {\r\n        const user = yield call(fetchUser);\r\n        yield put(getUser(user));\r\n    }\r\n}\r\n\r\nfunction* signIn() {\r\n    try {\r\n        const user = yield call(fetchUser);\r\n        yield put(getUser(user));\r\n        yield put(logInSucces());\r\n        localStorage.setItem('isAuth', 'true');\r\n    } catch (e) {\r\n        yield put(logInFailed());\r\n    }\r\n}\r\n\r\nfunction* postUserInfoSaga({ formData }: any) {\r\n    try {\r\n        const data = yield call(postUserInfo, formData);\r\n        yield put(getUser(data));\r\n    } catch (e) {\r\n        console.warn(e);\r\n    }\r\n}\r\n\r\nexport function* rootSaga() {\r\n    yield takeEvery(LIKE_FILM, Like);\r\n    yield takeEvery(UNLIKE_FILM, UnLike);\r\n    yield takeEvery(ADD_USER_INFO, postUserInfoSaga);\r\n\r\n    yield takeEvery(LOG_IN, signIn);\r\n\r\n    yield all([fork(appFetchSaga)]);\r\n}\r\n","export const light = {\r\n    bgColor: '#fff',\r\n    textColor: '#000',\r\n    btnBgColor: '#fff',\r\n    btnTextColor: '#0093ff',\r\n};\r\n\r\nexport const dark = {\r\n    bgColor: '#000',\r\n    textColor: '#fff',\r\n    btnBgColor: '#0093ff',\r\n    btnTextColor: '#fff',\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { rootReducer } from './reducers/reducer';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport App from './App';\r\nimport { rootSaga } from './reducers/saga';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ThemeWrapper } from './components/theme/theme';\r\nimport './index.css';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(rootReducer, compose(applyMiddleware(logger, sagaMiddleware), composeWithDevTools()));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <ThemeWrapper>\r\n                <App />\r\n            </ThemeWrapper>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n\r\n    document.getElementById('root')\r\n);\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { dark, light } from '../../themes/theme';\r\n\r\nexport const ThemeWrapper: React.FC = ({ children }: any) => {\r\n    const theme = useSelector((state: RootStore) => state.theme);\r\n\r\n    return <ThemeProvider theme={theme === 'dark' ? dark : light}>{children}</ThemeProvider>;\r\n};\r\n"],"sourceRoot":""}